{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","collapsed","handleClick","setState","inherits","createClass","key","value","event","props","react_default","a","createElement","className","summary","start","dateTime","timeZone","location","href","htmlLink","rel","target","description","onClick","Component","EventList","events","map","id","src_Event","CitySearch","query","suggestions","showSuggestions","undefined","handleInputChanged","locations","filter","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","_this2","type","onChange","onFocus","style","display","NumberOfEvents","numberOfEvents","handleInputChange","updateNumberOfEvents","extractLocations","toConsumableArray","Set","getAccessToken","_ref","asyncToGenerator","regenerator_default","mark","_callee","accessToken","tokenCheck","searchParams","code","results","authUrl","wrap","_context","prev","next","localStorage","getItem","t0","checkToken","sent","error","removeItem","URLSearchParams","window","search","get","axios","data","abrupt","getToken","stop","_ref2","_callee2","result","_context2","fetch","then","res","json","catch","_x","_ref3","_callee3","encodeCode","_yield$fetch$then$cat","access_token","_context3","encodeURIComponent","setItem","_x2","getEvents","_ref4","_callee4","token","url","_context4","NProgress","removeQuery","JSON","stringify","done","history","pushState","pathname","newurl","protocol","host","App","currentLocation","eventCount","locationEvents","mounted","slice","console","log","_this3","src_CitySearch","src_NumberOfEvents","number","src_EventList","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.48f35ad9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class Event extends Component {\n\n    state = {\n        collapsed: true\n    };\n\n    handleClick= ()  => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        });\n    };\n\n    render(){\n        const { event} = this.props;\n        const { collapsed } = this.state;\n       \n        \n    return (\n        <div className='event'>\n        \n        <h2 className='header summary'>{event.summary}</h2>\n        <p className=\"start-date\">\n            {event.start.dateTime} ({event.start.timeZone})\n          </p>\n        <p className='location'>@{event.summary} | {event.location}</p>\n   \n            \n    \n            {!collapsed && (\n                <div className=\"details-view\">\n                <h2 className=\"details-header\">About event:</h2>\n            <a href={event.htmlLink} className='details-link' rel=\"noreferrer\" target='_blank'>See details on Google Calendar</a>\n            <p className='description'>{event.description}</p>\n           </div>\n            )}\n\n            <button className={`details-btn ${collapsed ? \"show\" : \"hide\"}-details`} onClick={this.handleClick}>\n                {collapsed ? \"Show Details\" : \"Hide-Details\"}\n            </button>\n        \n    </div> \n    )}\n}\n\nexport default Event;","import React, {Component} from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const {events} = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map((event) => (\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                ))}\n            </ul>\n        );\n    }  \n}\n\nexport default EventList;","import React, {Component} from 'react';\n\nclass CitySearch extends Component {\n    state = {\n        query: '',\n        suggestions: [],\n        showSuggestions: undefined,\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        this.setState({\n            query: value,\n            suggestions,\n        });\n    }\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false,\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({showSuggestions: true}); }}\n                />\n\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {}: {display: 'none'}}>\n                    {this.state.suggestions.map((suggestion) => (\n                        <li \n                            key={suggestion}\n                            onClick={() => this.handleItemClicked(suggestion)}\n                        >{suggestion}</li>\n                    ))}\n                        <li>\n                            <b>See all cities</b>\n                        </li>\n                </ul>\n\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n    state = {\n        numberOfEvents: '32',\n    }\n\n    handleInputChange = (event) => {\n      const value = event.target.value;\n      this.setState({\n          numberOfEvents: event.target.value,\n      });\n      this.props.updateNumberOfEvents(value)\n    }\n\n    render() {\n        return(\n            <div className=\"NumberOfEvents\">\n                <input \n                    id=\"number-of-events_input\"\n                    type=\"number\" \n                    className=\"numberOfEvents\"\n                    value={this.state.numberOfEvents} \n                    onChange={this.handleInputChange}\n                />\n            </div>\n        )\n }};\nexport default NumberOfEvents;","/**\n *\n * @param {*} events:\n * The following function should be in the \"api.js\" file.\n * This function takes an events array, then uses map to create a new array with only locations.\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n * The Set will remove all duplicates from the array\n */\n\nimport { mockData } from \"./mock-data\";\nimport axios from \"axios\";\nimport NProgress from \"nprogress\";\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem(\"access_token\");\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem(\"access_token\");\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get(\"code\");\n    if (!code) {\n      const results = await axios.get(\n        \"https://3qclnxpwj3.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n      );\n      const { authUrl } = results.data;\n      return (window.location.href = authUrl);\n    }\n    return code && getToken(code);\n  }\n  return accessToken;\n};\n\nexport const checkToken = async (accessToken) => {\n  const result = await fetch(\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n  )\n    .then((res) => res.json())\n    .catch((error) => error.json());\n  return result;\n};\n\nconst getToken = async (code) => {\n  const encodeCode = encodeURIComponent(code);\n  const { access_token } = await fetch(\n    \"https://3qclnxpwj3.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      encodeCode\n  )\n    .then((res) => {\n      return res.json();\n    })\n    .catch((error) => error);\n\n  access_token && localStorage.setItem(\"access_token\", access_token);\n\n  return access_token;\n};\n\nexport const getEvents = async () => {\n  NProgress.start();\n\n  //   if (window.location.href.startsWith(\"http://localhost\")) {\n  //     NProgress.done();\n  //     return mockData;\n  //   }\n\n  const token = await getAccessToken();\n\n  if (token) {\n    removeQuery();\n    const url =\n      \"https://3qclnxpwj3.execute-api.eu-central-1.amazonaws.com/dev/api/get-events\" +\n      \"/\" +\n      token;\n    const result = await axios.get(url);\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\n    }\n    NProgress.done();\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl =\n      window.location.protocol +\n      \"//\" +\n      window.location.host +\n      window.location.pathname;\n    window.history.pushState(\"\", \"\", newurl);\n  } else {\n    newurl = window.location.protocol + \"//\" + window.location.host;\n    window.history.pushState(\"\", \"\", newurl);\n  }\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { extractLocations, getEvents } from \"./api\";\nimport \"./nprogress.css\";\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: \"all\",\n  };\n\n  componentDidMount() {\n    console.log(\"mounted\");\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events),\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location, eventCount = this.state.numberOfEvents) => {\n    getEvents().then((events) => {\n      const locationEvents =\n        location === \"all\"\n          ? events\n          : events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, eventCount),\n          currentLocation: location,\n        });\n      }\n    });\n  };\n\n  updateNumberOfEvents = (value) => {\n    this.setState({ numberOfEvents: value });\n    this.updateEvents(this.state.currentLocation, value);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch\n          locations={this.state.locations}\n          updateEvents={this.updateEvents}\n        />\n        <NumberOfEvents\n          updateNumberOfEvents={(number) => {\n            this.updateNumberOfEvents(number);\n          }}\n        />\n        <EventList\n          events={this.state.events}\n          numberOfEvents={this.state.numberOfEvents}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}